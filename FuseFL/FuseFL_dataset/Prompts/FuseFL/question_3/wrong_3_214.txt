Faulty Code:
```python
def remove_extras(lst):
    i=0
    while i<len(lst):    
        curr = lst[i]
        new = []
        for ele in lst:
            if ele == curr:
                continue
            new += [ele,]
        lst = new.copy
        i +=1
```

Task Description:
The function `remove_extras` takes in a list and returns a new list with all repeated occurrences of any element removed. This new list should maintain the same order as the input list. For example, remove_extras([5, 2, 1, 2, 3]) returns the list [5, 2, 1, 3].

Test Results:
The provided code is producing incorrect results. For example:
- Running the function as follows `remove_extras([1, 1, 1, 2, 3])` generate a `TypeError: object of type 'builtin_function_or_method' has no len()` in line 3 `while i<len(lst):`.
- Running the function as follows `remove_extras([1, 5, 1, 1, 3, 2])` generate a `TypeError: object of type 'builtin_function_or_method' has no len()` in line 3 `while i<len(lst):`.
- Running the function as follows `remove_extras([])` yields `None` instead of the expected `[]`.
- Running the function as follows `remove_extras([3, 4, 5, 1, 3])` generate a `TypeError: object of type 'builtin_function_or_method' has no len()` in line 3 `while i<len(lst):`.
- Running the function as follows `remove_extras([3, 4, 5, 1, 3])` generate a `TypeError: object of type 'builtin_function_or_method' has no len()` in line 3 `while i<len(lst):`.
- Running the function as follows `remove_extras([3, 4, 5, 1, 3])` generate a `TypeError: object of type 'builtin_function_or_method' has no len()` in line 3 `while i<len(lst):`.

Spectrum-based Fault Localization (SBFL) Techniques Results:
We have used SBFL techniques to identify potentially faulty lines. Here are the results of top-5 suspicious lines sorted in descending order of the score:
1. Line 2 `i=0`, Ochiai score: 0.339683
2. Line 3 `while i<len(lst):`, Ochiai score: 0.339683
3. Line 4 `curr = lst[i]`, Ochiai score: 0.310087
4. Line 5 `new = []`, Ochiai score: 0.310087
5. Line 6 `for ele in lst:`, Ochiai score: 0.310087

Analyze the provided code and utilize task description, test results, and SBFL techniques results to help in identifying potentially faulty lines. Provide the results following this JSON template:
```json
{
  "faultLoc": [
    {
      "faultyLine": (indicating the line number of the suspicious code),
      "code": (displaying the actual code),
      "explanation": (step by step reasoning on why this location is considered potentially faulty)
    },
    ...
  ]
}
```
Ensure that the objects in the "faultLoc" array are sorted in descending order of suspicion.